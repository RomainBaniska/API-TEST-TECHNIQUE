<?php

namespace ContainerTRxoGyB;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_Tyo2eRhService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.Tyo2eRh' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.Tyo2eRh'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Controller\\ContactController::createBook' => ['privates', '.service_locator.hJaifLh', 'get_ServiceLocator_HJaifLhService', true],
            'App\\Controller\\ContactController::deleteContact' => ['privates', '.service_locator.8delQOT', 'get_ServiceLocator_8delQOTService', true],
            'App\\Controller\\ContactController::getAllContacts' => ['privates', '.service_locator.xqsyqsb', 'get_ServiceLocator_XqsyqsbService', true],
            'App\\Controller\\ContactController::getDetailContacts' => ['privates', '.service_locator.Mt5Q6Ho', 'get_ServiceLocator_Mt5Q6HoService', true],
            'App\\Controller\\ContactController::toggleContact' => ['privates', '.service_locator.8delQOT', 'get_ServiceLocator_8delQOTService', true],
            'App\\Controller\\ContactController::updateContact' => ['privates', '.service_locator.1MBFWd6', 'get_ServiceLocator_1MBFWd6Service', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'App\\Controller\\ContactController:createBook' => ['privates', '.service_locator.hJaifLh', 'get_ServiceLocator_HJaifLhService', true],
            'App\\Controller\\ContactController:deleteContact' => ['privates', '.service_locator.8delQOT', 'get_ServiceLocator_8delQOTService', true],
            'App\\Controller\\ContactController:getAllContacts' => ['privates', '.service_locator.xqsyqsb', 'get_ServiceLocator_XqsyqsbService', true],
            'App\\Controller\\ContactController:getDetailContacts' => ['privates', '.service_locator.Mt5Q6Ho', 'get_ServiceLocator_Mt5Q6HoService', true],
            'App\\Controller\\ContactController:toggleContact' => ['privates', '.service_locator.8delQOT', 'get_ServiceLocator_8delQOTService', true],
            'App\\Controller\\ContactController:updateContact' => ['privates', '.service_locator.1MBFWd6', 'get_ServiceLocator_1MBFWd6Service', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
        ], [
            'App\\Controller\\ContactController::createBook' => '?',
            'App\\Controller\\ContactController::deleteContact' => '?',
            'App\\Controller\\ContactController::getAllContacts' => '?',
            'App\\Controller\\ContactController::getDetailContacts' => '?',
            'App\\Controller\\ContactController::toggleContact' => '?',
            'App\\Controller\\ContactController::updateContact' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\ContactController:createBook' => '?',
            'App\\Controller\\ContactController:deleteContact' => '?',
            'App\\Controller\\ContactController:getAllContacts' => '?',
            'App\\Controller\\ContactController:getDetailContacts' => '?',
            'App\\Controller\\ContactController:toggleContact' => '?',
            'App\\Controller\\ContactController:updateContact' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
